<?php

function econ_pages_menu() {
  $items['news-events'] = array(
      'page callback' => 'econ_pages_news_events_page',
      'page arguments' => array('20'),
      'access arguments' => array('access content'), 
      'file' => 'pages/news-events.inc', 
      'type' => MENU_LOCAL_TASK,
       'menu_name' => 'menu-econ-mainmenu'
    );
  $items['news-events/news'] = array(
      'page callback' => 'econ_pages_news_page',
      'page arguments' => array('20'),
      'access arguments' => array('access content'), 
      'file' => 'pages/news.inc', 
      'type' => MENU_LOCAL_TASK,
       'menu_name' => 'menu-econ-mainmenu'
    );  
  $items['news-events/events'] = array(
    'page callback' => 'econ_pages_events_page',
    'page arguments' => array('20'),
    'access arguments' => array('access content'), 
    'file' => 'pages/events.inc', 
    'type' => MENU_LOCAL_TASK,
     'menu_name' => 'menu-econ-mainmenu'
  );  
  $items['people'] = array(
    'page callback' => 'econ_pages_people_abc_page',
    'page arguments' => array('20'),
    'access arguments' => array('access content'), 
    'file' => 'pages/people.inc', 
    'type' => MENU_LOCAL_TASK,
    'menu_name' => 'menu-econ-mainmenu'
  );  
  $items['people/graduated'] = array(
    'page callback' => 'econ_pages_people_graduated_page',
    'page arguments' => array('20'),
    'access arguments' => array('access content'), 
    'file' => 'pages/people.inc', 
    'type' => MENU_LOCAL_TASK,
     'menu_name' => 'menu-econ-mainmenu'
  ); 
  $items['people/%'] = array(
    'page callback' => 'econ_pages_people_structure_page',
    'page arguments' => array('20'),
    'access arguments' => array('access content'), 
    'file' => 'pages/people.inc', 
    'type' => MENU_LOCAL_TASK,
     'menu_name' => 'menu-econ-mainmenu'
  );  
  $items['fakultet/contacts/phones'] = array(
    'page callback' => 'econ_pages_phones_page',
    'page arguments' => array('20'),
    'access arguments' => array('access content'), 
    'file' => 'pages/phones.inc', 
    'type' => MENU_LOCAL_TASK,
     'menu_name' => 'menu-econ-mainmenu'
  ); 
  $items['searchsite'] = array(
    'page callback' => 'econ_pages_search_page',
    'page arguments' => array('20'),
    'access arguments' => array('access content'), 
    'file' => 'pages/search.inc', 
     'type' => MENU_LOCAL_TASK,
  );  
  $items['node/%/iframe'] = array(
    'page callback' => 'econ_pages_iframe_page',
    'page arguments' => array('20'),
    'access arguments' => array('access content'), 
    'type' => MENU_CALLBACK,
  ); 
  return $items;
}
function econ_pages_iframe_page() {
  return "1";
}
function econ_pages_block_info() {
  $blocks = array();
  $blocks['menu-aside'] = array(
    'info' => t('Боковое меню'),
  );
  $blocks['news-filter'] = array(
    'info' => t('Фильтр новостей'),
  );
  $blocks['events-filter'] = array(
    'info' => t('Фильтр событий'),
  );
  $blocks['events-last'] = array(
    'info' => t('Последние события'),
  );
  $blocks['news-search'] = array(
    'info' => t('Поиск по новостям и событиям'),
  );
  $blocks['adverts-last'] = array(
    'info' => t('Последние объявления'),
  );
  $blocks['adverts-last-slider'] = array(
    'info' => t('Последние объявления (слайдер)'),
  );
  $blocks['news-last'] = array(
    'info' => t('Последние новости'),
  );
  $blocks['intro'] = array(
    'info' => t('Слайдер на главной'),
  );
  $blocks['kafedra'] = array(
    'info' => t('Связанное подразделение'),
  );
  $blocks['contact_block_form'] = array(
    'info' => t('Contact Form'),
    );
  $blocks['inner-links'] = array(
    'info' => t('Вложенные ссылки'),
    );
  return $blocks;
}

function econ_pages_block_view($delta='') {
  $block = array();
 
  switch($delta) {
    case 'menu-aside' :
      $block['content'] = _econ_pages_menu_block_view('menu_block');
    break;
    case 'news-filter' :
      module_load_include('inc', 'econ_pages', 'blocks/filters');
      $block['content'] = _econ_pages_news_filter();
    break;

    case 'events-filter' :
      module_load_include('inc', 'econ_pages', 'blocks/filters');
      $block['content'] = _econ_pages_events_filter();
    break;

    case 'events-last' :
      module_load_include('inc', 'econ_pages', 'blocks/events');
      $block['content'] = _econ_pages_events_last_block_view();
    break;

    case 'news-search' :
      module_load_include('inc', 'econ_pages', 'blocks/search');
      $block['content'] = _econ_pages_search_block_view();
    break;
    case 'adverts-last' :
      module_load_include('inc', 'econ_pages', 'blocks/adverts');
      $block['content'] = _econ_pages_adverts_last_block_view();
    break;
    case 'adverts-last-slider' :
      module_load_include('inc', 'econ_pages', 'blocks/adverts');
      $block['content'] = _econ_pages_adverts_last_slider_block_view();
    break;
    case 'news-last' :
      module_load_include('inc', 'econ_pages', 'blocks/news');
      $block['content'] = _econ_pages_news_last_block_view();
    break;
    case 'intro' :
      module_load_include('inc', 'econ_pages', 'blocks/intro');
      $block['content'] = _econ_pages_intro_block_view();
    break;
    case 'kafedra' :
      module_load_include('inc', 'econ_pages', 'blocks/kafedra');
      $block['content'] = _econ_pages_kafedra_block_view();
    break;
    case 'contact_block_form':
      $block['subject'] = t('Контакт');
      // Load contact pages inc as the form definition sits there.
      module_load_include('inc', 'contact', 'contact.pages');
      $block['content'] = drupal_get_form('contact_site_form');
    break;
    case 'inner-links':
      //$block['subject'] = t('Контакт');
      $block['content'] =  _econ_pages_get_sublinks();
    break;
  }
 
  return $block;
}

function econ_pages_submenu_tree_all_data($mlid, $menu = 'menu-econ-mainmenu') {
  $tree = menu_tree_all_data($menu);
  $tree = i18n_menu_localize_tree($tree);

  foreach ($tree as $branch) {
    if ($branch['link']['mlid'] == $mlid and count($branch['below'])) {

      return array_values($branch['below']);
    }
  }
  return array_values($tree);
}
function _econ_pages_get_current_mlid() {
  global $language; 
  $mlid = array();
  $q = current_path();
  $menu_info = db_select('menu_links' , 'ml')
    ->condition('ml.link_path' , $q)
    ->condition('ml.menu_name', 'menu-econ-mainmenu')
    ->condition('ml.language', array("und", $language->language), "IN")
    ->condition('ml.hidden', 0)
    ->fields('ml', array('mlid', 'plid'))
    ->execute()
    ->fetchAll();

  foreach($menu_info as $key => $value) {
    $mlid[] = $menu_info[$key]->mlid;
  }
  if (count($mlid)) {
    return $mlid[0];
  } else {
    // не в меню 
    return 0;
  }
}
function _econ_pages_get_menu() {
  
  $mainmenu = array();
  // не могу использовать нормальну ф-цию menu_build_tree, так как есть баг (если дважды ее вызывать)
  // see https://www.drupal.org/node/1697570  
  // menu_tree_all_data возвращает hidden ссылки, нужно проверять 

  $current_mlid = _econ_pages_get_current_mlid();

  $parents = token_menu_link_load_all_parents($current_mlid); 


  if (count($parents) == 0) {
      //1 уровень 

      return $mainmenu = econ_pages_submenu_tree_all_data(0, 'menu-econ-mainmenu');
  }
  if (count($parents) >= 1) {
      //2 уровень
      $keys = array_keys($parents) ;
      return $mainmenu = econ_pages_submenu_tree_all_data($keys[0], 'menu-econ-mainmenu');
  } 
  return $mainmenu;
}
// todo заменить на parents
function _econ_pages_get_active_mlids() {
  $current_mlid = _econ_pages_get_current_mlid();

  $parents = token_menu_link_load_all_parents($current_mlid); 

  $active = array_keys($parents) ;
  $active[] = $current_mlid;
  return $active;
}

function _econ_pages_menu_block_view($template) {

  $menu =  _econ_pages_get_menu() ;  

  $active = _econ_pages_get_active_mlids();
  
	return theme_render_template(drupal_get_path('module', 'econ_pages')."/templates/".$template.".tpl.php", 
    array("menu"=>$menu, "active_trail" => $active));
}

function _econ_pages_render_featured($i) {
  // i - порядковый номер пункта меню

  switch($i) {
    case 1:
      $delta = 2;
    break;
    case 2:
      $delta = 3;
    break;
    case 3:
      $delta = 4;
    break;
    case 4:
      $delta = 5;
    break;
    case 5:
      $delta = 6;
    break;
    case 6:
      $delta = 7;
    break;
    default:
      $delta = 2;
    break;
  }
  if ($delta) {
  $block = module_invoke('block', 'block_view', $delta);
  return render($block['content']);
  }
}
/** для адресов вида people/centri/ **/
function _econ_pages_get_people_path() {
  $paths = array("1"=>"administracia", "2"=>"kafedri", "3"=>"centri");
  return $paths; 
} 
function _econ_pages_remove_hidden(&$menu) {
  foreach ($menu as $k=>$m) {
    if ($m['link']['hidden']==1) {
      unset($menu[$k]);
    }
   }

}

function econ_pages_wysiwyg_editor_settings_alter(&$settings, $context) {
  global $base_url;
  if ($context['profile']->editor == 'ckeditor') {
    $format = $context['profile']->format;
    $path = $base_url.'/'.drupal_get_path('module', 'econ_pages') . '/js';
    $settings['stylesSet'] = "mycustomstyleset:$path/ckeditor_styles7.js";
  }
}

function econ_pages_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['wysiwyg_teaser'] = array(
    'label' => t('WYSIWYG teaser'),
    'custom settings' => TRUE,
    'is_wysiwyg'=>True
  );
  $entity_info['node']['view modes']['wysiwyg_teaser_person'] = array(
    'label' => t('Person card'),
    'custom settings' => FALSE,
    'is_wysiwyg'=>True
  );
}

function econ_pages_preprocess_node(&$vars) {
 // drupal_set_message(print_R($vars['view_mode'], 1));
   if($vars['view_mode'] == 'wysiwyg_teaser') {
    $vars['theme_hook_suggestions'][] = 'node__' . $vars['type'] . '__wysiwyg';
  }
   if($vars['view_mode'] == 'wysiwyg_teaser_person') {
    $vars['theme_hook_suggestions'][] = 'node__' . $vars['type'] . '__wysiwyg2';
  }
}
function econ_pages_form_contact_site_form_alter(&$form, &$form_state, $form_id) {
  $form['#submit'][]  = 'econ_pages__contact_form_blocks_submit';
}

/* Extra form submission handler */
function econ_pages__contact_form_blocks_submit($form, &$form_state) {
  $form_state['redirect'] = current_path(); // you could replace 'node/246' by the page you want to be redirected to.
}

function econ_pages_field_formatter_info() {
  return array(
    'leadtext' => array( //Machine name of the formatter
      'label' => t('Lead text'),
      'field types' => array('text', 'text_long', 'text_with_summary') 
    ),
    'people' => array( //Machine name of the formatter
      'label' => t('People'),
      'field types' => array('field_collection')
    ),
    'files' => array( //Machine name of the formatter
      'label' => t('Files'),
      'field types' => array('file')
    )
  );
}
function econ_pages_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array(); // Initialize the var

  $settings = $display['settings'];


  $element = array();

  if ($display['type'] == 'leadtext') {
    foreach ($items as $delta => $item) {
      $element[$delta] = array('#markup' => '<div class="page__lead">'.$item['value']."</div>");
    }
  }
  if ($display['type'] == 'people') {
    $html = theme_render_template(drupal_get_path('module', 'econ_pages')."/templates/formatters/people.tpl.php", 
    array("items"=>$items));
    $element[0]=array("#markup"=>$html);
    return $element;
  }
  if ($display['type'] == 'files') {
    $html = theme_render_template(drupal_get_path('module', 'econ_pages')."/templates/formatters/files.tpl.php", 
    array("items"=>$items));
    $element[0]=array("#markup"=>$html);
  }
  return $element;
}
function _econ_pages_get_sublinks() {

  global $language; 

  $current_mlid = _econ_pages_get_current_mlid(); 

  $current_link = menu_link_load($current_mlid); 

  menu_build_tree('menu-econ-mainmenu');

  $parameters = array(
    'active_trail' => array( $current_link['plid']),
    'only_active_trail' => FALSE,
    'min_depth' =>  $current_link['depth']+1,
    'max_depth' =>  $current_link['depth']+1,
    'conditions' => array('plid' =>  $current_link['mlid']),
  );
  $children = menu_build_tree($current_link['menu_name'], $parameters);

  //Reset menu cache since 'menu_build_tree' will cause trouble later on after 
  //you call pathauto to update paths as it can only be called once. 
  //Check: https://www.drupal.org/node/1697570
  
  menu_reset_static_cache();
  $data = array();
  if (count($children)) {
    foreach ($children as $value) {
      $path = explode("/", $value['link']['link_path']); 

      $value['img_uri']= '';
      if (count($path) == 2 && $path[0]=='node' && is_numeric($path[1])) {
        $node = node_load($path[1]);

        if (isset($node->field_leadimage['und'][0]['uri'])) {
          $value['img_uri']= $node->field_leadimage['und'][0]['uri']; 
        }
      } 

      $data[] = $value;
    }
  }
  return theme_render_template(drupal_get_path('module', 'econ_pages')."/templates/econ-contents.tpl.php", 
    array("data"=>$data));

}